[2022-05-26T15:19:33.119] [DEBUG] default - SST: 1.2.8
[2022-05-26T15:19:33.122] [DEBUG] default - CDK: 2.24.0
[2022-05-26T15:19:33.125] [DEBUG] aws-auth - Determining if we're on an EC2 instance.
[2022-05-26T15:19:33.125] [DEBUG] aws-auth - Does not look like an EC2 instance.
[2022-05-26T15:19:33.178] [INFO] default - Using stage: admin
[2022-05-26T15:19:33.182] [INFO] default - [90mPreparing your SST app[39m
[2022-05-26T15:19:33.245] [INFO] default - 
[2022-05-26T15:19:33.245] [INFO] default - =======================
[2022-05-26T15:19:33.246] [INFO] default -  Deploying debug stack
[2022-05-26T15:19:33.246] [INFO] default - =======================
[2022-05-26T15:19:33.246] [INFO] default - 
[2022-05-26T15:19:33.247] [DEBUG] default - synth {
  app: 'node bin/index.mjs notes admin us-east-1 "/home/pyry/notes"',
  output: 'cdk.out',
  rollback: true,
  roleArn: undefined,
  verbose: 0,
  noColor: false
}
[2022-05-26T15:19:36.628] [TRACE] cdk - 

[2022-05-26T15:19:36.642] [INFO] default - [90mDeploying stacks[39m
[2022-05-26T15:19:36.644] [DEBUG] default - checkInReviewBootstrapStacks
[2022-05-26T15:19:36.644] [DEBUG] default - checkInReviewBootstrapStackInRegion us-east-1
[2022-05-26T15:19:37.127] [TRACE] default - Initial stack states: [{"id":"admin-notes-debug-stack","name":"admin-notes-debug-stack","status":"pending","dependencies":[],"region":"us-east-1","events":[]}]
[2022-05-26T15:19:37.127] [TRACE] default - After update deploy statuses: [{"id":"admin-notes-debug-stack","name":"admin-notes-debug-stack","status":"pending","dependencies":[],"region":"us-east-1","events":[]}]
[2022-05-26T15:19:37.128] [DEBUG] default - deploy stack: started admin-notes-debug-stack
[2022-05-26T15:19:37.128] [DEBUG] default - deploy stack: get pre-deploy status
[2022-05-26T15:19:37.620] [DEBUG] default - deploy stack: get pre-deploy status: {
  StackStatus: 'CREATE_COMPLETE',
  LastUpdatedTime: 2022-05-26T12:16:47.685Z
}
[2022-05-26T15:19:37.626] [DEBUG] default - deploy stack: addInUseExports
[2022-05-26T15:19:37.628] [DEBUG] default - deploy stack: isTemplateChanged
[2022-05-26T15:19:38.361] [DEBUG] default - Resources:
  TableCD117FA1:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Table/Resource
  Bucket83908E77:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 1
            Prefix: payloads/
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: 'true'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Bucket/Resource
  BucketPolicyE9A3008A:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: Bucket83908E77
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - Bucket83908E77
                  - Arn
              - Fn::Join:
                  - ''
                  - - Fn::GetAtt:
                        - Bucket83908E77
                        - Arn
                    - /*
        Version: '2012-10-17'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Bucket/Policy/Resource
  BucketAutoDeleteObjectsCustomResourceBAFD23C2:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: Bucket83908E77
    DependsOn:
      - BucketPolicyE9A3008A
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Bucket/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: >-
            arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs12.x
      Description:
        Fn::Join:
          - ''
          - - 'Lambda function for auto-deleting objects in '
            - Ref: Bucket83908E77
            - ' S3 bucket.'
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be
      aws:asset:property: Code
  Api:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: admin-notes-debug-stack-api
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Api
  ApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: Api
      StageName: admin
      AutoDeploy: true
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/ApiStage
  ConnectServiceRole07B61CE8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/ServiceRole/Resource
  ConnectServiceRoleDefaultPolicyCE008EDB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: ConnectServiceRoleDefaultPolicyCE008EDB
      Roles:
        - Ref: ConnectServiceRole07B61CE8
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/ServiceRole/DefaultPolicy/Resource
  Connect5B7625CA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - ConnectServiceRole07B61CE8
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsConnect.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - ConnectServiceRoleDefaultPolicyCE008EDB
      - ConnectServiceRole07B61CE8
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ConnectLogRetentionC1F463CD:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Connect5B7625CA
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/LogRetention/Resource
  ConnectConnectPermission9DBC7813:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Connect5B7625CA
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/ConnectPermission
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: >-
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - >-
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Connect5B7625CA
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/ConnectIntegration
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $connect
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ConnectIntegration
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/ConnectRoute
  DisconnectServiceRole90AEC2EB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/ServiceRole/Resource
  DisconnectServiceRoleDefaultPolicy32856207:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: DisconnectServiceRoleDefaultPolicy32856207
      Roles:
        - Ref: DisconnectServiceRole90AEC2EB
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/ServiceRole/DefaultPolicy/Resource
  Disconnect7D6B12BD:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - DisconnectServiceRole90AEC2EB
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsDisconnect.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - DisconnectServiceRoleDefaultPolicy32856207
      - DisconnectServiceRole90AEC2EB
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  DisconnectLogRetentionE61D7937:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Disconnect7D6B12BD
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/LogRetention/Resource
  DisconnectDisconnectPermission933E876E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Disconnect7D6B12BD
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/DisconnectPermission
  DisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Disconnect7D6B12BD
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DisconnectIntegration
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $disconnect
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: DisconnectIntegration
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DisconnectRoute
  ServiceRole4288B192:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/ServiceRole/Resource
  ServiceRoleDefaultPolicy94CF55F6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: ServiceRoleDefaultPolicy94CF55F6
      Roles:
        - Ref: ServiceRole4288B192
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/ServiceRole/DefaultPolicy/Resource
  Resource:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - ServiceRole4288B192
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsDefault.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - ServiceRoleDefaultPolicy94CF55F6
      - ServiceRole4288B192
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  LogRetentionDD0A1FA1:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Resource
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/LogRetention/Resource
  DefaultPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Resource
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/DefaultPermission
  DefaultIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Resource
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DefaultIntegration
  DefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $default
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: DefaultIntegration
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DefaultRoute
Outputs:
  Endpoint:
    Value:
      Fn::Join:
        - ''
        - - Fn::GetAtt:
              - Api
              - ApiEndpoint
          - /admin
  BucketArn:
    Value:
      Fn::GetAtt:
        - Bucket83908E77
        - Arn
  BucketName:
    Value:
      Ref: Bucket83908E77
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-05-26T15:19:38.362] [DEBUG] default - Resources:
  TableCD117FA1:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Table/Resource
  Bucket83908E77:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 1
            Prefix: payloads/
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: 'true'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Bucket/Resource
  BucketPolicyE9A3008A:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: Bucket83908E77
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - Bucket83908E77
                  - Arn
              - Fn::Join:
                  - ''
                  - - Fn::GetAtt:
                        - Bucket83908E77
                        - Arn
                    - /*
        Version: '2012-10-17'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Bucket/Policy/Resource
  BucketAutoDeleteObjectsCustomResourceBAFD23C2:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: Bucket83908E77
    DependsOn:
      - BucketPolicyE9A3008A
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Bucket/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: >-
            arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs12.x
      Description:
        Fn::Join:
          - ''
          - - 'Lambda function for auto-deleting objects in '
            - Ref: Bucket83908E77
            - ' S3 bucket.'
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be
      aws:asset:property: Code
  Api:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: admin-notes-debug-stack-api
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Api
  ApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: Api
      StageName: admin
      AutoDeploy: true
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/ApiStage
  ConnectServiceRole07B61CE8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/ServiceRole/Resource
  ConnectServiceRoleDefaultPolicyCE008EDB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: ConnectServiceRoleDefaultPolicyCE008EDB
      Roles:
        - Ref: ConnectServiceRole07B61CE8
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/ServiceRole/DefaultPolicy/Resource
  Connect5B7625CA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - ConnectServiceRole07B61CE8
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsConnect.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - ConnectServiceRoleDefaultPolicyCE008EDB
      - ConnectServiceRole07B61CE8
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ConnectLogRetentionC1F463CD:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Connect5B7625CA
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/LogRetention/Resource
  ConnectConnectPermission9DBC7813:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Connect5B7625CA
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/ConnectPermission
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: >-
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - >-
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Connect5B7625CA
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/ConnectIntegration
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $connect
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ConnectIntegration
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/ConnectRoute
  DisconnectServiceRole90AEC2EB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/ServiceRole/Resource
  DisconnectServiceRoleDefaultPolicy32856207:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: DisconnectServiceRoleDefaultPolicy32856207
      Roles:
        - Ref: DisconnectServiceRole90AEC2EB
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/ServiceRole/DefaultPolicy/Resource
  Disconnect7D6B12BD:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - DisconnectServiceRole90AEC2EB
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsDisconnect.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - DisconnectServiceRoleDefaultPolicy32856207
      - DisconnectServiceRole90AEC2EB
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  DisconnectLogRetentionE61D7937:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Disconnect7D6B12BD
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/LogRetention/Resource
  DisconnectDisconnectPermission933E876E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Disconnect7D6B12BD
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/DisconnectPermission
  DisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Disconnect7D6B12BD
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DisconnectIntegration
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $disconnect
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: DisconnectIntegration
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DisconnectRoute
  ServiceRole4288B192:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/ServiceRole/Resource
  ServiceRoleDefaultPolicy94CF55F6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: ServiceRoleDefaultPolicy94CF55F6
      Roles:
        - Ref: ServiceRole4288B192
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/ServiceRole/DefaultPolicy/Resource
  Resource:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - ServiceRole4288B192
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsDefault.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - ServiceRoleDefaultPolicy94CF55F6
      - ServiceRole4288B192
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  LogRetentionDD0A1FA1:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Resource
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/LogRetention/Resource
  DefaultPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Resource
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/DefaultPermission
  DefaultIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Resource
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DefaultIntegration
  DefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $default
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: DefaultIntegration
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DefaultRoute
Outputs:
  Endpoint:
    Value:
      Fn::Join:
        - ''
        - - Fn::GetAtt:
              - Api
              - ApiEndpoint
          - /admin
  BucketArn:
    Value:
      Fn::GetAtt:
        - Bucket83908E77
        - Arn
  BucketName:
    Value:
      Ref: Bucket83908E77
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-05-26T15:19:38.362] [DEBUG] default - deploy stack: isTemplateChanged: unchanged
[2022-05-26T15:19:38.362] [DEBUG] default - deploy stack: done admin-notes-debug-stack {
  status: 'unchanged',
  statusReason: undefined,
  account: '775155028887',
  outputs: {
    BucketArn: 'arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh',
    BucketName: 'admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh',
    Endpoint: 'wss://58cpru2gx4.execute-api.us-east-1.amazonaws.com/admin'
  },
  exports: {}
}
[2022-05-26T15:19:38.362] [INFO] default - [32m[39m
[32m ✅  admin-notes-debug-stack (no changes)[39m
[32m[39m
[2022-05-26T15:19:38.363] [DEBUG] default - At least 1 stack successfully deployed, call deployStacks() again
[2022-05-26T15:19:38.363] [TRACE] default - After deploy stacks: [{"id":"admin-notes-debug-stack","name":"admin-notes-debug-stack","status":"unchanged","dependencies":[],"account":"775155028887","region":"us-east-1","startedAt":1653571178362,"endedAt":1653571178362,"events":[],"outputs":{"BucketArn":"arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh","BucketName":"admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh","Endpoint":"wss://58cpru2gx4.execute-api.us-east-1.amazonaws.com/admin"},"exports":{}}]
[2022-05-26T15:19:38.364] [INFO] default - 
Stack admin-notes-debug-stack
[2022-05-26T15:19:38.366] [INFO] default -   Status: no changes
[2022-05-26T15:19:38.366] [INFO] default -   Outputs:
[2022-05-26T15:19:38.367] [INFO] default -     BucketArn: arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh
[2022-05-26T15:19:38.368] [INFO] default -     BucketName: admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh
[2022-05-26T15:19:38.368] [INFO] default -     Endpoint: wss://58cpru2gx4.execute-api.us-east-1.amazonaws.com/admin
[2022-05-26T15:19:38.369] [INFO] default - 
[2022-05-26T15:19:38.370] [DEBUG] default - deployRet [
  {
    id: 'admin-notes-debug-stack',
    name: 'admin-notes-debug-stack',
    region: 'us-east-1',
    status: 'unchanged',
    errorMessage: undefined,
    outputs: {
      BucketArn: 'arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh',
      BucketName: 'admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh',
      Endpoint: 'wss://58cpru2gx4.execute-api.us-east-1.amazonaws.com/admin'
    },
    exports: {}
  }
]
[2022-05-26T15:19:38.370] [INFO] default - 
[2022-05-26T15:19:38.370] [INFO] default - ===============
[2022-05-26T15:19:38.371] [INFO] default -  Deploying app
[2022-05-26T15:19:38.371] [INFO] default - ===============
[2022-05-26T15:19:38.371] [INFO] default - 
[2022-05-26T15:19:38.372] [DEBUG] default - synth {
  app: 'node .build/run.mjs',
  output: '.build/cdk.out',
  rollback: true,
  roleArn: undefined,
  verbose: 0,
  noColor: false
}
[2022-05-26T15:19:42.707] [TRACE] cdk - [32mSuccessfully synthesized to [34m/home/pyry/notes/.build/cdk.out[39m[32m[39m

[2022-05-26T15:19:42.707] [TRACE] cdk - Supply a stack id ([32madmin-notes-StorageStack[39m, [32madmin-notes-ApiStack[39m) to display its template.

[2022-05-26T15:19:42.713] [TRACE] cdk - 

[2022-05-26T15:19:51.097] [INFO] default - [90mDeploying stacks[39m
[2022-05-26T15:19:51.100] [DEBUG] default - checkInReviewBootstrapStacks
[2022-05-26T15:19:51.100] [DEBUG] default - checkInReviewBootstrapStackInRegion us-east-1
[2022-05-26T15:19:51.560] [TRACE] default - Initial stack states: [{"id":"admin-notes-StorageStack","name":"admin-notes-StorageStack","status":"pending","dependencies":[],"region":"us-east-1","events":[]},{"id":"admin-notes-ApiStack","name":"admin-notes-ApiStack","status":"pending","dependencies":["admin-notes-StorageStack"],"region":"us-east-1","events":[]}]
[2022-05-26T15:19:51.560] [TRACE] default - After update deploy statuses: [{"id":"admin-notes-StorageStack","name":"admin-notes-StorageStack","status":"pending","dependencies":[],"region":"us-east-1","events":[]},{"id":"admin-notes-ApiStack","name":"admin-notes-ApiStack","status":"pending","dependencies":["admin-notes-StorageStack"],"region":"us-east-1","events":[]}]
[2022-05-26T15:19:51.560] [DEBUG] default - deploy stack: started admin-notes-StorageStack
[2022-05-26T15:19:51.560] [DEBUG] default - deploy stack: get pre-deploy status
[2022-05-26T15:19:52.040] [DEBUG] default - deploy stack: get pre-deploy status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-05-26T13:01:20.538Z
}
[2022-05-26T15:19:52.041] [DEBUG] default - deploy stack: addInUseExports
[2022-05-26T15:19:52.042] [DEBUG] default - deploy stack: isTemplateChanged
[2022-05-26T15:19:52.505] [DEBUG] default - Resources:
  SSTMetadata:
    Type: AWS::CDK::Metadata
    Metadata:
      aws:cdk:path: admin-notes-StorageStack/SSTMetadata
      sst:version: 1.2.8
      sst:constructs:
        - id: Notes
          addr: c888d084f1a912ef3ee73aabfcbd1908e7242d4926
          stack: admin-notes-StorageStack
          type: Table
          data:
            tableName:
              Ref: NotesTable7100B0E8
            consumers: []
        - id: Uploads
          addr: c8ff75e9b8ea3437c5c125f407e1ba513c0fec33d9
          stack: admin-notes-StorageStack
          type: Bucket
          data:
            name:
              Ref: UploadsBucketC4B27CC7
            notifications: []
            notificationNames: []
  NotesTable7100B0E8:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: noteId
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: noteId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      TableName: admin-notes-Notes
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: admin-notes-StorageStack/Notes/Table/Resource
  UploadsBucketC4B27CC7:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: admin-notes-StorageStack/Uploads/Bucket/Resource
Outputs:
  ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38:
    Value:
      Fn::GetAtt:
        - NotesTable7100B0E8
        - Arn
    Export:
      Name: >-
        admin-notes-StorageStack:ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38
  ExportsOutputRefNotesTable7100B0E8C879CB95:
    Value:
      Ref: NotesTable7100B0E8
    Export:
      Name: admin-notes-StorageStack:ExportsOutputRefNotesTable7100B0E8C879CB95
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-05-26T15:19:52.505] [DEBUG] default - Resources:
  SSTMetadata:
    Type: AWS::CDK::Metadata
    Metadata:
      aws:cdk:path: admin-notes-StorageStack/SSTMetadata
      sst:version: 1.2.8
      sst:constructs:
        - id: Notes
          addr: c888d084f1a912ef3ee73aabfcbd1908e7242d4926
          stack: admin-notes-StorageStack
          type: Table
          data:
            tableName:
              Ref: NotesTable7100B0E8
            consumers: []
        - id: Uploads
          addr: c8ff75e9b8ea3437c5c125f407e1ba513c0fec33d9
          stack: admin-notes-StorageStack
          type: Bucket
          data:
            name:
              Ref: UploadsBucketC4B27CC7
            notifications: []
            notificationNames: []
  NotesTable7100B0E8:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: noteId
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: noteId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      TableName: admin-notes-Notes
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: admin-notes-StorageStack/Notes/Table/Resource
  UploadsBucketC4B27CC7:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: admin-notes-StorageStack/Uploads/Bucket/Resource
Outputs:
  ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38:
    Value:
      Fn::GetAtt:
        - NotesTable7100B0E8
        - Arn
    Export:
      Name: >-
        admin-notes-StorageStack:ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38
  ExportsOutputRefNotesTable7100B0E8C879CB95:
    Value:
      Ref: NotesTable7100B0E8
    Export:
      Name: admin-notes-StorageStack:ExportsOutputRefNotesTable7100B0E8C879CB95
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-05-26T15:19:52.505] [DEBUG] default - deploy stack: isTemplateChanged: unchanged
[2022-05-26T15:19:52.505] [DEBUG] default - deploy stack: done admin-notes-StorageStack {
  status: 'unchanged',
  statusReason: undefined,
  account: '775155028887',
  outputs: {
    ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38: 'arn:aws:dynamodb:us-east-1:775155028887:table/admin-notes-Notes',
    ExportsOutputRefNotesTable7100B0E8C879CB95: 'admin-notes-Notes'
  },
  exports: {
    'admin-notes-StorageStack:ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38': 'arn:aws:dynamodb:us-east-1:775155028887:table/admin-notes-Notes',
    'admin-notes-StorageStack:ExportsOutputRefNotesTable7100B0E8C879CB95': 'admin-notes-Notes'
  }
}
[2022-05-26T15:19:52.506] [INFO] default - [32m[39m
[32m ✅  admin-notes-StorageStack (no changes)[39m
[32m[39m
[2022-05-26T15:19:52.506] [DEBUG] default - At least 1 stack successfully deployed, call deployStacks() again
[2022-05-26T15:19:52.506] [DEBUG] default - deploy stack: started admin-notes-ApiStack
[2022-05-26T15:19:52.506] [DEBUG] default - deploy stack: get pre-deploy status
[2022-05-26T15:19:52.932] [DEBUG] default - deploy stack: get pre-deploy status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-05-26T13:10:05.224Z
}
[2022-05-26T15:19:52.932] [DEBUG] default - deploy stack: addInUseExports
[2022-05-26T15:19:52.934] [DEBUG] default - deploy stack: isTemplateChanged
[2022-05-26T15:19:53.624] [DEBUG] default - Resources:
  SSTMetadata:
    Type: AWS::CDK::Metadata
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/SSTMetadata
      sst:version: 1.2.8
      sst:constructs:
        - id: Api
          addr: c80cd4adec244af350e61fbbc8e693dd962df47a8f
          stack: admin-notes-ApiStack
          type: Api
          data:
            graphql: false
            url:
              Fn::Join:
                - ''
                - - https://
                  - Ref: ApiCD79AAA0
                  - .execute-api.us-east-1.
                  - Ref: AWS::URLSuffix
                  - /
            httpApiId:
              Ref: ApiCD79AAA0
            routes:
              - type: function
                route: POST /notes
                fn:
                  node: c81c24627eb1861acc459c29958a22e9b44ef49f42
                  stack: admin-notes-ApiStack
              - type: function
                route: GET /notes/{id}
                fn:
                  node: c831b152e10a4f98db37a36f66893f991ac55f8aff
                  stack: admin-notes-ApiStack
        - id: Lambda_POST_--notes
          addr: c81c24627eb1861acc459c29958a22e9b44ef49f42
          stack: admin-notes-ApiStack
          type: Function
          data:
            localId: admin-notes-ApiStack-Api-Lambda_POST_-notes
            arn:
              Fn::GetAtt:
                - ApiLambdaPOSTnotes3B067E1B
                - Arn
        - id: Lambda_GET_--notes--{id}
          addr: c831b152e10a4f98db37a36f66893f991ac55f8aff
          stack: admin-notes-ApiStack
          type: Function
          data:
            localId: admin-notes-ApiStack-Api-Lambda_GET_-notes-{id}
            arn:
              Fn::GetAtt:
                - ApiLambdaGETnotesidBDFD7F2C
                - Arn
  ApiCD79AAA0:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - '*'
        AllowMethods:
          - '*'
        AllowOrigins:
          - '*'
      Name: admin-notes-Api
      ProtocolType: HTTP
      Tags:
        sst:app: notes
        sst:stage: admin
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Api/Resource
  ApiDefaultStage1AAE989B:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      StageName: $default
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt:
            - ApiLogGroup1717FE17
            - Arn
        Format: >-
          {"requestTime":"$context.requestTime","requestId":"$context.requestId","httpMethod":"$context.httpMethod","path":"$context.path","routeKey":"$context.routeKey","status":$context.status,"responseLatency":$context.responseLatency,"integrationRequestId":"$context.integration.requestId","integrationStatus":"$context.integration.status","integrationLatency":"$context.integration.latency","integrationServiceStatus":"$context.integration.integrationStatus","ip":"$context.identity.sourceIp","userAgent":"$context.identity.userAgent","cognitoIdentityId":"$context.identity.cognitoIdentityId"}
      AutoDeploy: true
      Tags:
        sst:app: notes
        sst:stage: admin
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Api/DefaultStage/Resource
  ApiLogGroup1717FE17:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/vendedlogs/apis/admin-notes-Api-
            - Ref: ApiCD79AAA0
            - /default
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/LogGroup/Resource
  ApiLambdaPOSTnotesServiceRoleD16681D3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Lambda_POST_--notes/ServiceRole/Resource
  ApiLambdaPOSTnotesServiceRoleDefaultPolicy6D85CF6B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  admin-notes-StorageStack:ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        admin-notes-StorageStack:ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38
                    - /*
        Version: '2012-10-17'
      PolicyName: ApiLambdaPOSTnotesServiceRoleDefaultPolicy6D85CF6B
      Roles:
        - Ref: ApiLambdaPOSTnotesServiceRoleD16681D3
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Lambda_POST_--notes/ServiceRole/DefaultPolicy/Resource
  ApiLambdaPOSTnotes3B067E1B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 66d66fd5503c5913c760756b67a0ef1aad176e9025f833091f2b63ea1ae0e8b3.zip
      Role:
        Fn::GetAtt:
          - ApiLambdaPOSTnotesServiceRoleD16681D3
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: >-
              admin-notes-StorageStack:ExportsOutputRefNotesTable7100B0E8C879CB95
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: functions/create.main
          SST_DEBUG_ENDPOINT: wss://58cpru2gx4.execute-api.us-east-1.amazonaws.com/admin
          SST_DEBUG_BUCKET_NAME: admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh
          SST_FUNCTION_ID: admin-notes-ApiStack-Api-Lambda_POST_-notes
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ApiLambdaPOSTnotesServiceRoleDefaultPolicy6D85CF6B
      - ApiLambdaPOSTnotesServiceRoleD16681D3
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Lambda_POST_--notes/Resource
      aws:asset:path: >-
        asset.66d66fd5503c5913c760756b67a0ef1aad176e9025f833091f2b63ea1ae0e8b3.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ApiLambdaPOSTnotesEventInvokeConfig78ADA2E8:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ApiLambdaPOSTnotes3B067E1B
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Lambda_POST_--notes/EventInvokeConfig/Resource
  ApiRoutePOSTnotesIntegrationPOSTnotes44F9E77C:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ApiLambdaPOSTnotes3B067E1B
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Route_POST_--notes/Integration_POST_--notes/Resource
  ApiRoutePOSTnotesIntegrationPOSTnotesPermission83B10601:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ApiLambdaPOSTnotes3B067E1B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-east-1:775155028887:'
            - Ref: ApiCD79AAA0
            - /*/*/notes
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Route_POST_--notes/Integration_POST_--notes-Permission
  ApiRoutePOSTnotes66667A1D:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      RouteKey: POST /notes
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ApiRoutePOSTnotesIntegrationPOSTnotes44F9E77C
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Route_POST_--notes/Resource
  ApiLambdaGETnotesidServiceRole5ED71CA8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Lambda_GET_--notes--{id}/ServiceRole/Resource
  ApiLambdaGETnotesidServiceRoleDefaultPolicy0BDDFC9B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  admin-notes-StorageStack:ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        admin-notes-StorageStack:ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38
                    - /*
        Version: '2012-10-17'
      PolicyName: ApiLambdaGETnotesidServiceRoleDefaultPolicy0BDDFC9B
      Roles:
        - Ref: ApiLambdaGETnotesidServiceRole5ED71CA8
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Lambda_GET_--notes--{id}/ServiceRole/DefaultPolicy/Resource
  ApiLambdaGETnotesidBDFD7F2C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 66d66fd5503c5913c760756b67a0ef1aad176e9025f833091f2b63ea1ae0e8b3.zip
      Role:
        Fn::GetAtt:
          - ApiLambdaGETnotesidServiceRole5ED71CA8
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: >-
              admin-notes-StorageStack:ExportsOutputRefNotesTable7100B0E8C879CB95
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: functions/get.main
          SST_DEBUG_ENDPOINT: wss://58cpru2gx4.execute-api.us-east-1.amazonaws.com/admin
          SST_DEBUG_BUCKET_NAME: admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh
          SST_FUNCTION_ID: admin-notes-ApiStack-Api-Lambda_GET_-notes-{id}
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ApiLambdaGETnotesidServiceRoleDefaultPolicy0BDDFC9B
      - ApiLambdaGETnotesidServiceRole5ED71CA8
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Lambda_GET_--notes--{id}/Resource
      aws:asset:path: >-
        asset.66d66fd5503c5913c760756b67a0ef1aad176e9025f833091f2b63ea1ae0e8b3.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ApiLambdaGETnotesidEventInvokeConfig638AD083:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ApiLambdaGETnotesidBDFD7F2C
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Lambda_GET_--notes--{id}/EventInvokeConfig/Resource
  ApiRouteGETnotesidIntegrationGETnotesidDDEC4C94:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ApiLambdaGETnotesidBDFD7F2C
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Route_GET_--notes--{id}/Integration_GET_--notes--{id}/Resource
  ApiRouteGETnotesidIntegrationGETnotesidPermissionC332DC73:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ApiLambdaGETnotesidBDFD7F2C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-east-1:775155028887:'
            - Ref: ApiCD79AAA0
            - /*/*/notes/{id}
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Route_GET_--notes--{id}/Integration_GET_--notes--{id}-Permission
  ApiRouteGETnotesid7B39CB5A:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      RouteKey: GET /notes/{id}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ApiRouteGETnotesidIntegrationGETnotesidDDEC4C94
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Route_GET_--notes--{id}/Resource
Outputs:
  ApiEndpoint:
    Value:
      Fn::GetAtt:
        - ApiCD79AAA0
        - ApiEndpoint
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-05-26T15:19:53.624] [DEBUG] default - Resources:
  SSTMetadata:
    Type: AWS::CDK::Metadata
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/SSTMetadata
      sst:version: 1.2.8
      sst:constructs:
        - id: Api
          addr: c80cd4adec244af350e61fbbc8e693dd962df47a8f
          stack: admin-notes-ApiStack
          type: Api
          data:
            graphql: false
            url:
              Fn::Join:
                - ''
                - - https://
                  - Ref: ApiCD79AAA0
                  - .execute-api.us-east-1.
                  - Ref: AWS::URLSuffix
                  - /
            httpApiId:
              Ref: ApiCD79AAA0
            routes:
              - type: function
                route: POST /notes
                fn:
                  node: c81c24627eb1861acc459c29958a22e9b44ef49f42
                  stack: admin-notes-ApiStack
              - type: function
                route: GET /notes/{id}
                fn:
                  node: c831b152e10a4f98db37a36f66893f991ac55f8aff
                  stack: admin-notes-ApiStack
              - type: function
                route: GET /notes
                fn:
                  node: c8c49d3c77a561e5794968d5f6b2b61cc847aa10fe
                  stack: admin-notes-ApiStack
              - type: function
                route: PUT /notes/{id}
                fn:
                  node: c88eada48695b98c19c0ffdc2753a1ef8174c3a686
                  stack: admin-notes-ApiStack
        - id: Lambda_POST_--notes
          addr: c81c24627eb1861acc459c29958a22e9b44ef49f42
          stack: admin-notes-ApiStack
          type: Function
          data:
            localId: admin-notes-ApiStack-Api-Lambda_POST_-notes
            arn:
              Fn::GetAtt:
                - ApiLambdaPOSTnotes3B067E1B
                - Arn
        - id: Lambda_GET_--notes--{id}
          addr: c831b152e10a4f98db37a36f66893f991ac55f8aff
          stack: admin-notes-ApiStack
          type: Function
          data:
            localId: admin-notes-ApiStack-Api-Lambda_GET_-notes-{id}
            arn:
              Fn::GetAtt:
                - ApiLambdaGETnotesidBDFD7F2C
                - Arn
        - id: Lambda_GET_--notes
          addr: c8c49d3c77a561e5794968d5f6b2b61cc847aa10fe
          stack: admin-notes-ApiStack
          type: Function
          data:
            localId: admin-notes-ApiStack-Api-Lambda_GET_-notes
            arn:
              Fn::GetAtt:
                - ApiLambdaGETnotesA3E56CF7
                - Arn
        - id: Lambda_PUT_--notes--{id}
          addr: c88eada48695b98c19c0ffdc2753a1ef8174c3a686
          stack: admin-notes-ApiStack
          type: Function
          data:
            localId: admin-notes-ApiStack-Api-Lambda_PUT_-notes-{id}
            arn:
              Fn::GetAtt:
                - ApiLambdaPUTnotesid28D10C39
                - Arn
  ApiCD79AAA0:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - '*'
        AllowMethods:
          - '*'
        AllowOrigins:
          - '*'
      Name: admin-notes-Api
      ProtocolType: HTTP
      Tags:
        sst:app: notes
        sst:stage: admin
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Api/Resource
  ApiDefaultStage1AAE989B:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      StageName: $default
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt:
            - ApiLogGroup1717FE17
            - Arn
        Format: >-
          {"requestTime":"$context.requestTime","requestId":"$context.requestId","httpMethod":"$context.httpMethod","path":"$context.path","routeKey":"$context.routeKey","status":$context.status,"responseLatency":$context.responseLatency,"integrationRequestId":"$context.integration.requestId","integrationStatus":"$context.integration.status","integrationLatency":"$context.integration.latency","integrationServiceStatus":"$context.integration.integrationStatus","ip":"$context.identity.sourceIp","userAgent":"$context.identity.userAgent","cognitoIdentityId":"$context.identity.cognitoIdentityId"}
      AutoDeploy: true
      Tags:
        sst:app: notes
        sst:stage: admin
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Api/DefaultStage/Resource
  ApiLogGroup1717FE17:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/vendedlogs/apis/admin-notes-Api-
            - Ref: ApiCD79AAA0
            - /default
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/LogGroup/Resource
  ApiLambdaPOSTnotesServiceRoleD16681D3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Lambda_POST_--notes/ServiceRole/Resource
  ApiLambdaPOSTnotesServiceRoleDefaultPolicy6D85CF6B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  admin-notes-StorageStack:ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        admin-notes-StorageStack:ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38
                    - /*
        Version: '2012-10-17'
      PolicyName: ApiLambdaPOSTnotesServiceRoleDefaultPolicy6D85CF6B
      Roles:
        - Ref: ApiLambdaPOSTnotesServiceRoleD16681D3
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Lambda_POST_--notes/ServiceRole/DefaultPolicy/Resource
  ApiLambdaPOSTnotes3B067E1B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 66d66fd5503c5913c760756b67a0ef1aad176e9025f833091f2b63ea1ae0e8b3.zip
      Role:
        Fn::GetAtt:
          - ApiLambdaPOSTnotesServiceRoleD16681D3
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: >-
              admin-notes-StorageStack:ExportsOutputRefNotesTable7100B0E8C879CB95
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: functions/create.main
          SST_DEBUG_ENDPOINT: wss://58cpru2gx4.execute-api.us-east-1.amazonaws.com/admin
          SST_DEBUG_BUCKET_NAME: admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh
          SST_FUNCTION_ID: admin-notes-ApiStack-Api-Lambda_POST_-notes
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ApiLambdaPOSTnotesServiceRoleDefaultPolicy6D85CF6B
      - ApiLambdaPOSTnotesServiceRoleD16681D3
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Lambda_POST_--notes/Resource
      aws:asset:path: >-
        asset.66d66fd5503c5913c760756b67a0ef1aad176e9025f833091f2b63ea1ae0e8b3.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ApiLambdaPOSTnotesEventInvokeConfig78ADA2E8:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ApiLambdaPOSTnotes3B067E1B
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Lambda_POST_--notes/EventInvokeConfig/Resource
  ApiRoutePOSTnotesIntegrationPOSTnotes44F9E77C:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ApiLambdaPOSTnotes3B067E1B
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Route_POST_--notes/Integration_POST_--notes/Resource
  ApiRoutePOSTnotesIntegrationPOSTnotesPermission83B10601:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ApiLambdaPOSTnotes3B067E1B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-east-1:775155028887:'
            - Ref: ApiCD79AAA0
            - /*/*/notes
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Route_POST_--notes/Integration_POST_--notes-Permission
  ApiRoutePOSTnotes66667A1D:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      RouteKey: POST /notes
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ApiRoutePOSTnotesIntegrationPOSTnotes44F9E77C
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Route_POST_--notes/Resource
  ApiLambdaGETnotesidServiceRole5ED71CA8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Lambda_GET_--notes--{id}/ServiceRole/Resource
  ApiLambdaGETnotesidServiceRoleDefaultPolicy0BDDFC9B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  admin-notes-StorageStack:ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        admin-notes-StorageStack:ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38
                    - /*
        Version: '2012-10-17'
      PolicyName: ApiLambdaGETnotesidServiceRoleDefaultPolicy0BDDFC9B
      Roles:
        - Ref: ApiLambdaGETnotesidServiceRole5ED71CA8
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Lambda_GET_--notes--{id}/ServiceRole/DefaultPolicy/Resource
  ApiLambdaGETnotesidBDFD7F2C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 66d66fd5503c5913c760756b67a0ef1aad176e9025f833091f2b63ea1ae0e8b3.zip
      Role:
        Fn::GetAtt:
          - ApiLambdaGETnotesidServiceRole5ED71CA8
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: >-
              admin-notes-StorageStack:ExportsOutputRefNotesTable7100B0E8C879CB95
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: functions/get.main
          SST_DEBUG_ENDPOINT: wss://58cpru2gx4.execute-api.us-east-1.amazonaws.com/admin
          SST_DEBUG_BUCKET_NAME: admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh
          SST_FUNCTION_ID: admin-notes-ApiStack-Api-Lambda_GET_-notes-{id}
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ApiLambdaGETnotesidServiceRoleDefaultPolicy0BDDFC9B
      - ApiLambdaGETnotesidServiceRole5ED71CA8
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Lambda_GET_--notes--{id}/Resource
      aws:asset:path: >-
        asset.66d66fd5503c5913c760756b67a0ef1aad176e9025f833091f2b63ea1ae0e8b3.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ApiLambdaGETnotesidEventInvokeConfig638AD083:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ApiLambdaGETnotesidBDFD7F2C
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Lambda_GET_--notes--{id}/EventInvokeConfig/Resource
  ApiRouteGETnotesidIntegrationGETnotesidDDEC4C94:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ApiLambdaGETnotesidBDFD7F2C
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Route_GET_--notes--{id}/Integration_GET_--notes--{id}/Resource
  ApiRouteGETnotesidIntegrationGETnotesidPermissionC332DC73:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ApiLambdaGETnotesidBDFD7F2C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-east-1:775155028887:'
            - Ref: ApiCD79AAA0
            - /*/*/notes/{id}
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Route_GET_--notes--{id}/Integration_GET_--notes--{id}-Permission
  ApiRouteGETnotesid7B39CB5A:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      RouteKey: GET /notes/{id}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ApiRouteGETnotesidIntegrationGETnotesidDDEC4C94
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Route_GET_--notes--{id}/Resource
  ApiLambdaGETnotesServiceRoleFAD2F768:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Lambda_GET_--notes/ServiceRole/Resource
  ApiLambdaGETnotesServiceRoleDefaultPolicy46521967:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  admin-notes-StorageStack:ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        admin-notes-StorageStack:ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38
                    - /*
        Version: '2012-10-17'
      PolicyName: ApiLambdaGETnotesServiceRoleDefaultPolicy46521967
      Roles:
        - Ref: ApiLambdaGETnotesServiceRoleFAD2F768
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Lambda_GET_--notes/ServiceRole/DefaultPolicy/Resource
  ApiLambdaGETnotesA3E56CF7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 66d66fd5503c5913c760756b67a0ef1aad176e9025f833091f2b63ea1ae0e8b3.zip
      Role:
        Fn::GetAtt:
          - ApiLambdaGETnotesServiceRoleFAD2F768
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: >-
              admin-notes-StorageStack:ExportsOutputRefNotesTable7100B0E8C879CB95
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: functions/list.main
          SST_DEBUG_ENDPOINT: wss://58cpru2gx4.execute-api.us-east-1.amazonaws.com/admin
          SST_DEBUG_BUCKET_NAME: admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh
          SST_FUNCTION_ID: admin-notes-ApiStack-Api-Lambda_GET_-notes
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ApiLambdaGETnotesServiceRoleDefaultPolicy46521967
      - ApiLambdaGETnotesServiceRoleFAD2F768
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Lambda_GET_--notes/Resource
      aws:asset:path: >-
        asset.66d66fd5503c5913c760756b67a0ef1aad176e9025f833091f2b63ea1ae0e8b3.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ApiLambdaGETnotesEventInvokeConfigE155863D:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ApiLambdaGETnotesA3E56CF7
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Lambda_GET_--notes/EventInvokeConfig/Resource
  ApiRouteGETnotesIntegrationGETnotes809882CF:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ApiLambdaGETnotesA3E56CF7
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Route_GET_--notes/Integration_GET_--notes/Resource
  ApiRouteGETnotesIntegrationGETnotesPermissionA18F8817:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ApiLambdaGETnotesA3E56CF7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-east-1:775155028887:'
            - Ref: ApiCD79AAA0
            - /*/*/notes
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Route_GET_--notes/Integration_GET_--notes-Permission
  ApiRouteGETnotesBFEE3C9D:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      RouteKey: GET /notes
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ApiRouteGETnotesIntegrationGETnotes809882CF
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Route_GET_--notes/Resource
  ApiLambdaPUTnotesidServiceRole7A962796:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Lambda_PUT_--notes--{id}/ServiceRole/Resource
  ApiLambdaPUTnotesidServiceRoleDefaultPolicyB3FF9AED:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::ImportValue: >-
                  admin-notes-StorageStack:ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38
              - Fn::Join:
                  - ''
                  - - Fn::ImportValue: >-
                        admin-notes-StorageStack:ExportsOutputFnGetAttNotesTable7100B0E8Arn5DD5BF38
                    - /*
        Version: '2012-10-17'
      PolicyName: ApiLambdaPUTnotesidServiceRoleDefaultPolicyB3FF9AED
      Roles:
        - Ref: ApiLambdaPUTnotesidServiceRole7A962796
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Lambda_PUT_--notes--{id}/ServiceRole/DefaultPolicy/Resource
  ApiLambdaPUTnotesid28D10C39:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-775155028887-us-east-1
        S3Key: 66d66fd5503c5913c760756b67a0ef1aad176e9025f833091f2b63ea1ae0e8b3.zip
      Role:
        Fn::GetAtt:
          - ApiLambdaPUTnotesidServiceRole7A962796
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: >-
              admin-notes-StorageStack:ExportsOutputRefNotesTable7100B0E8C879CB95
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: functions/update.main
          SST_DEBUG_ENDPOINT: wss://58cpru2gx4.execute-api.us-east-1.amazonaws.com/admin
          SST_DEBUG_BUCKET_NAME: admin-notes-debug-stack-bucket83908e77-171a1m8rkdgqh
          SST_FUNCTION_ID: admin-notes-ApiStack-Api-Lambda_PUT_-notes-{id}
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ApiLambdaPUTnotesidServiceRoleDefaultPolicyB3FF9AED
      - ApiLambdaPUTnotesidServiceRole7A962796
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Lambda_PUT_--notes--{id}/Resource
      aws:asset:path: >-
        asset.66d66fd5503c5913c760756b67a0ef1aad176e9025f833091f2b63ea1ae0e8b3.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ApiLambdaPUTnotesidEventInvokeConfig80B67243:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ApiLambdaPUTnotesid28D10C39
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Lambda_PUT_--notes--{id}/EventInvokeConfig/Resource
  ApiRoutePUTnotesidIntegrationPUTnotesid0B48B9D7:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ApiLambdaPUTnotesid28D10C39
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Route_PUT_--notes--{id}/Integration_PUT_--notes--{id}/Resource
  ApiRoutePUTnotesidIntegrationPUTnotesidPermissionDD71990C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ApiLambdaPUTnotesid28D10C39
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-east-1:775155028887:'
            - Ref: ApiCD79AAA0
            - /*/*/notes/{id}
    Metadata:
      aws:cdk:path: >-
        admin-notes-ApiStack/Api/Route_PUT_--notes--{id}/Integration_PUT_--notes--{id}-Permission
  ApiRoutePUTnotesidFAE087B0:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      RouteKey: PUT /notes/{id}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ApiRoutePUTnotesidIntegrationPUTnotesid0B48B9D7
    Metadata:
      aws:cdk:path: admin-notes-ApiStack/Api/Route_PUT_--notes--{id}/Resource
Outputs:
  ApiEndpoint:
    Value:
      Fn::GetAtt:
        - ApiCD79AAA0
        - ApiEndpoint
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-05-26T15:19:53.624] [DEBUG] default - deploy stack: run cdk deploy
[2022-05-26T15:19:53.649] [DEBUG] default - deploy stack: poll stack status
[2022-05-26T15:19:54.099] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-05-26T13:10:05.224Z
}
[2022-05-26T15:19:54.099] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-05-26T15:19:55.215] [TRACE] default - deploy stack: run cdk deploy: stderr: 
✨  Synthesis time: 0.04s


[2022-05-26T15:19:55.216] [TRACE] default - deploy stack: run cdk deploy: stderr: [1madmin-notes-ApiStack[22m: deploying...

[2022-05-26T15:19:56.675] [TRACE] default - deploy stack: run cdk deploy: stderr: [0%] start: Publishing 66d66fd5503c5913c760756b67a0ef1aad176e9025f833091f2b63ea1ae0e8b3:775155028887-us-east-1

[2022-05-26T15:19:56.675] [TRACE] default - deploy stack: run cdk deploy: stderr: [0%] start: Publishing 2369f08ec97be3947e6423de992b2bbc1cd8d0ccff7051199095d75e2f7aa2c1:775155028887-us-east-1

[2022-05-26T15:19:57.549] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-05-26T13:10:05.224Z
}
[2022-05-26T15:19:57.549] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-05-26T15:19:57.955] [TRACE] default - deploy stack: run cdk deploy: stderr: [50%] success: Published 66d66fd5503c5913c760756b67a0ef1aad176e9025f833091f2b63ea1ae0e8b3:775155028887-us-east-1

[2022-05-26T15:19:59.061] [TRACE] default - deploy stack: run cdk deploy: stderr: [100%] success: Published 2369f08ec97be3947e6423de992b2bbc1cd8d0ccff7051199095d75e2f7aa2c1:775155028887-us-east-1

[2022-05-26T15:20:00.678] [TRACE] default - deploy stack: run cdk deploy: stderr: [1madmin-notes-ApiStack[22m: creating CloudFormation changeset...

[2022-05-26T15:20:00.996] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-05-26T13:10:05.224Z
}
[2022-05-26T15:20:00.996] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-05-26T15:20:04.528] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-05-26T13:10:05.224Z
}
[2022-05-26T15:20:04.529] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-05-26T15:20:08.013] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-05-26T13:10:05.224Z
}
[2022-05-26T15:20:08.013] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-05-26T15:20:11.489] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-05-26T13:10:05.224Z
}
[2022-05-26T15:20:11.489] [DEBUG] default - deploy stack: poll stack status: unknown
[2022-05-26T15:20:14.936] [DEBUG] default - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-05-26T13:10:05.224Z
}
[2022-05-26T15:20:14.936] [DEBUG] default - deploy stack: poll stack status: unknown
